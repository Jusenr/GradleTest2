apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.jusenr.gradletest2"
        minSdkVersion rootProject.ext.MINSDK_VERSION
        targetSdkVersion rootProject.ext.TARGETSDK_VERSION
        versionCode rootProject.ext.VERSION_CODE
        versionName rootProject.ext.VERSION_NAME
        resValue "string", "cur_app_name", "GradleTest2"
        manifestPlaceholders = [APPLICATION_ID: applicationId,
                                UMENG_APP_KEY : "1234567890",
                                QQ_APP_ID     : "app1的QQ_APP_ID",
                                AMAP_KEY      : "app1的高德地图key"]
        //标记当前环境是否为测试环境(false)
        buildConfigField "boolean", "IS_JUST_TEST", "false"
        //默认API(生产环境)
        buildConfigField "String", "DOMAIN_NAME", "\"http://pic.qiantucdn.com/\""
        buildConfigField "String", "DOMAIN_NAME1", "\"http://tx.haiqq.com/\""
        //版本号(1.0.1)，保留的固定值
        buildConfigField("String", "VERSION_NUMBER", "\"${rootProject.ext.VERSION_NAME}\"")
        buildConfigField("String", "LOG_TAG", "\"${rootProject.ext.LOG_TAG}\"")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions "versionCode"
        project.archivesBaseName = "GradleTest2-v$versionName"
    }
    signingConfigs {
        release {
            storeFile file("../gradletest.jks")
            keyAlias "gradletest"
            storePassword "123456"
            keyPassword "123456"

//            def sPassword = null
//            def kPassword = null
//
//            Console console = System.console()
//            Console.printf "\n\nWe have to sign some things in this build." + "\n\nPlease enter your signing details.\n\n"
//            if (System.console() != null)
//                sPassword = console.readLine("PGP Key Id: ")
//            if (System.console() != null)
//                kPassword = console.readPassword("PGP Private Key Password: ")
//            Console.printf "\nThanks.\n\n"
//
//            if (sPassword == null)
//                sPassword = "123456"
//            if (kPassword == null)
//                kPassword = "123456"
//
//            storePassword sPassword
//            keyPassword kPassword
        }
    }
    buildTypes {
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
//源码集
    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['src/main/assets']
        }
    }
    dexOptions {
        javaMaxHeapSize "2g"
    }

    // Configure only for each module that uses Java 8
    // language features (either in its source code or
    // through dependencies).
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//产品渠道配置
    productFlavors {
        dev {
            applicationId 'com.jusenr.dev'
            resValue "string", "cur_app_name", "GradleTest_dev"
            manifestPlaceholders = [APPLICATION_ID: applicationId]
            //标记当前环境是否为测试环境(true)
            buildConfigField "boolean", "IS_JUST_TEST", "true"
            //开发环境API地址
            buildConfigField "String", "DOMAIN_NAME", "\"http://tx.haiqq.com/\""
            buildConfigField "String", "DOMAIN_NAME1", "\"http://tx.haiqq.com/\""
            versionName = "D" + rootProject.ext.VERSION_NAME
        }
        offline {
            applicationId 'com.jusenr.offline'
            resValue "string", "cur_app_name", "GradleTest_offline"
            manifestPlaceholders = [APPLICATION_ID: applicationId]
            //标记当前环境是否为测试环境(true)
            buildConfigField "boolean", "IS_JUST_TEST", "true"
            //测试环境API地址
            buildConfigField "String", "DOMAIN_NAME", "\"http://pic1.16pic.com/\""
            buildConfigField "String", "DOMAIN_NAME1", "\"http://tx.haiqq.com/\""
            versionName = "T" + rootProject.ext.VERSION_NAME
        }
        online { versionName = "V" + defaultConfig.versionName }
//        huodong { versionName = "V" + defaultConfig.versionName }
//        GooglePaly { versionName = "V" + defaultConfig.versionName }
//        xiaomi { versionName = "V" + defaultConfig.versionName }
//        umeng { versionName = "V" + defaultConfig.versionName }

        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile name: 'SMSSDK-3.0.0', ext: 'aar'
    compile name: 'SMSSDKGUI-3.0.0', ext: 'aar'
    compile 'com.android.support:appcompat-v7:26.0.2'
    compile 'com.android.support.constraint:constraint-layout:1.1.2'
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile 'com.github.bumptech.glide:glide:4.0.0-RC1'
    compile 'com.jusenr.android.library:androidtools:1.3.+'
    testCompile 'junit:junit:4.12'
}